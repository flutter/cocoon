// Mocks generated by Mockito 5.4.4 from annotations
// in auto_submit/test/utilities/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:auto_submit/service/approver_service.dart' as _i3;
import 'package:auto_submit/service/config.dart' as _i2;
import 'package:github/github.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConfig_0 extends _i1.SmartFake implements _i2.Config {
  _FakeConfig_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApproverService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApproverService extends _i1.Mock implements _i3.ApproverService {
  MockApproverService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Config get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: _FakeConfig_0(this, Invocation.getter(#config)),
          )
          as _i2.Config);

  @override
  _i4.Future<Set<String>> getAutoApprovalAccounts(_i5.RepositorySlug? slug) =>
      (super.noSuchMethod(
            Invocation.method(#getAutoApprovalAccounts, [slug]),
            returnValue: _i4.Future<Set<String>>.value(<String>{}),
          )
          as _i4.Future<Set<String>>);

  @override
  _i4.Future<void> autoApproval(_i5.PullRequest? pullRequest) =>
      (super.noSuchMethod(
            Invocation.method(#autoApproval, [pullRequest]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
