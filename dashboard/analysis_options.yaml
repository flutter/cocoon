# To be kept in sync with https://github.com/flutter/flutter/blob/master/analysis_options.yaml
# We don't set `implicit-casts: false` because of JSON code that we'll migrate with NNBD.
# We remove the exclusions since they don't apply here.

analyzer:
  strong-mode:
    # implicit-casts: false
    implicit-dynamic: false
  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: warning
    # treat missing returns as a warning (not a hint)
    missing_return: warning
    # allow having TODOs in the code
    todo: ignore
    # Ignore analyzer hints for updating pubspecs when using Future or
    # Stream and not importing dart:async
    # Please see https://github.com/flutter/flutter/pull/24528 for details.
    sdk_version_async_exported_from_core: ignore
  exclude:
    - ".dart_tool/**"
    - "**/*.g.dart"
    - "**/*.pb.dart"
    - "**/*.pbjson.dart"
    - "**/*.pbenum.dart"
    - "test/utils/mocks.mocks.dart"

include: package:flutter_lints/flutter.yaml

linter:
  rules:
    # these rules are documented on and in the same order as
    # the Dart Lint rules page to make maintenance easier
    # https://dart-lang.github.io/linter/lints/index.html
    # the rules listed below are the ones we would like to exclude from flutter_lint package
    always_put_required_named_parameters_first: false # we prefer having parameters in the same order as fields https://github.com/flutter/flutter/issues/10219
    avoid_annotating_with_dynamic: false # conflicts with always_specify_types
    avoid_as: false # required for implicit-casts: true
    avoid_catches_without_on_clauses: false # we do this commonly
    avoid_catching_errors: false # we do this commonly
    avoid_double_and_int_checks: false # only useful when targeting JS runtime
    avoid_equals_and_hash_code_on_mutable_classes: false # not yet tested
    avoid_implementing_value_types: false # not yet tested
    avoid_js_rounded_ints: false # only useful when targeting JS runtime
    avoid_positional_boolean_parameters: false # not yet tested
    avoid_private_typedef_functions: false # we prefer having typedef (discussion in https://github.com/flutter/flutter/pull/16356)
    avoid_redundant_argument_values: false # not yet tested
    avoid_returning_null: false # there are plenty of valid reasons to return null
    avoid_returning_null_for_future: false # not yet tested
    avoid_returning_this: false # there are plenty of valid reasons to return this
    avoid_setters_without_getters: false # not yet tested
    avoid_shadowing_type_parameters: false # not yet tested
    avoid_types_on_closure_parameters: false # conflicts with always_specify_types
    avoid_unnecessary_containers: false # not yet tested
    avoid_web_libraries_in_flutter: false # not yet tested
    cascade_invocations: false # not yet tested
    close_sinks: false # not reliable enough
    comment_references: false # blocked on https://github.com/flutter/flutter/issues/20765
    constant_identifier_names: false # needs an opt-out https://github.com/dart-lang/linter/issues/204
    diagnostic_describe_all_properties: false # not yet tested
    file_names: false # not yet tested
    invariant_booleans: false # too many false positives: https://github.com/dart-lang/linter/issues/811
    join_return_with_assignment: false # not yet tested
    lines_longer_than_80_chars: false # not yet tested
    literal_only_boolean_expressions: false # too many false positives: https://github.com/dart-lang/sdk/issues/34181
    missing_whitespace_between_adjacent_strings: false # not yet tested
    no_logic_in_create_state: false # not yet tested
    no_runtimeType_toString: false # not yet tested
    null_closures: false  # not yet tested
    omit_local_variable_types: false # opposite of always_specify_types
    one_member_abstracts: false # too many false positives
    only_throw_errors: false # https://github.com/flutter/flutter/issues/5792
    parameter_assignments: false # we do this commonly
    prefer_asserts_with_message: false # not yet tested
    prefer_constructors_over_static_methods: false # not yet tested
    prefer_double_quotes: false # opposite of prefer_single_quotes
    prefer_expression_function_bodies: false # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#consider-using--for-short-functions-and-methods
    prefer_function_declarations_over_variables: false # not yet tested
    prefer_int_literals: false # not yet tested
    prefer_interpolation_to_compose_strings: false # not yet tested
    prefer_mixin: false # https://github.com/dart-lang/language/issues/32
    prefer_null_aware_operators: false # disable until NNBD, see https://github.com/flutter/flutter/pull/32711#issuecomment-492930932
    provide_deprecation_message: false # not yet tested
    public_member_api_docs: false # enabled on a case-by-case basis; see e.g. packages/analysis_options.yaml
    sort_child_properties_last: false # not yet tested
    type_annotate_public_apis: false # subset of always_specify_types
    unawaited_futures: false # too many false positives
    unnecessary_await_in_return: false # not yet tested
    unnecessary_final: false # conflicts with prefer_final_locals
    unnecessary_lambdas: false # has false positives: https://github.com/dart-lang/linter/issues/498
    unsafe_html: false # not yet tested
    use_function_type_syntax_for_parameters: false # not yet tested
    use_key_in_widget_constructors: false # not yet tested
    use_setters_to_change_properties: false # not yet tested
    use_string_buffers: false # has false positives: https://github.com/dart-lang/sdk/issues/34182
    use_to_and_as_if_applicable: false # has false positives, so we prefer to catch this by code-review
